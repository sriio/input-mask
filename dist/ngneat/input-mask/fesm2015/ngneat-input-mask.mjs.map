{"version":3,"file":"ngneat-input-mask.mjs","sources":["../../../../projects/ngneat/input-mask/src/lib/config.ts","../../../../projects/ngneat/input-mask/src/lib/input-mask.directive.ts","../../../../projects/ngneat/input-mask/src/lib/input-mask.module.ts","../../../../projects/ngneat/input-mask/src/lib/constants.ts","../../../../projects/ngneat/input-mask/src/public-api.ts","../../../../projects/ngneat/input-mask/src/ngneat-input-mask.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport class InputMaskConfig {\r\n  isAsync = false;\r\n  inputSelector = 'input';\r\n}\r\n\r\nexport const INPUT_MASK_CONFIG = new InjectionToken<InputMaskConfig>(\r\n  'InputMaskConfig'\r\n);\r\n","/* eslint-disable @typescript-eslint/member-ordering */\r\nimport { isPlatformServer } from '@angular/common';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  PLATFORM_ID,\r\n  Renderer2,\r\n  Self,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NgControl,\r\n  ValidationErrors,\r\n  Validator,\r\n} from '@angular/forms';\r\nimport _Inputmask from 'inputmask';\r\nimport type Inputmask from 'inputmask';\r\n\r\nimport { InputmaskOptions } from './types';\r\nimport { InputMaskConfig, INPUT_MASK_CONFIG } from './config';\r\n\r\n// The initial issue: https://github.com/ngneat/input-mask/issues/40\r\n// Webpack 5 has module resolution changes. Libraries should configure the `output.export`\r\n// (https://webpack.js.org/configuration/output/#outputlibraryexport) property when published in\r\n// a UMD format, to tell Webpack that there's a default export.\r\n// The `_Inputmask` is an object with 2 properties: `{ __esModule: true, default: Inputmask }`.\r\n// But we want to be backwards-compatible, so we try to read the `default` property first; otherwise, we fall back to `_Inputmask`.\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nconst InputmaskConstructor =\r\n  (_Inputmask as unknown as { default?: Inputmask.Static }).default ||\r\n  _Inputmask;\r\n\r\n@Directive({\r\n  // eslint-disable-next-line @angular-eslint/directive-selector\r\n  selector: '[inputMask]',\r\n})\r\nexport class InputMaskDirective<T = any>\r\n  implements OnInit, OnDestroy, ControlValueAccessor, Validator\r\n{\r\n  // eslint-disable-next-line @typescript-eslint/naming-convention\r\n  static ngAcceptInputType_inputMask: InputmaskOptions<any> | null | undefined;\r\n\r\n  /**\r\n   * Helps you to create input-mask based on https://github.com/RobinHerbots/Inputmask\r\n   * Supports form-validation out-of-the box.\r\n   * Visit https://github.com/ngneat/input-mask for more info.\r\n   */\r\n  @Input()\r\n  set inputMask(inputMask: InputmaskOptions<T> | null | undefined) {\r\n    if (inputMask) {\r\n      this.inputMaskOptions = inputMask;\r\n      this.updateInputMask();\r\n    }\r\n  }\r\n\r\n  inputMaskPlugin: Inputmask.Instance | null = null;\r\n  nativeInputElement: HTMLInputElement | null = null;\r\n  defaultInputMaskConfig = new InputMaskConfig();\r\n\r\n  private inputMaskOptions: InputmaskOptions<T> | null = null;\r\n\r\n  /* The original `onChange` function coming from the `setUpControl`. */\r\n  private onChange: (value: T | null) => void = () => {};\r\n\r\n  private mutationObserver: MutationObserver | null = null;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: string,\r\n    private elementRef: ElementRef<HTMLInputElement | any>,\r\n    private renderer: Renderer2,\r\n    @Optional() @Self() public ngControl: NgControl | null,\r\n    @Inject(INPUT_MASK_CONFIG) config: InputMaskConfig,\r\n    private ngZone: NgZone\r\n  ) {\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n    this.setNativeInputElement(config);\r\n  }\r\n\r\n  @HostListener('input', ['$event.target.value'])\r\n  onInput = (_: any) => {};\r\n\r\n  @HostListener('blur', ['$event.target.value'])\r\n  onTouched = (_: any) => {};\r\n\r\n  ngOnInit(): void {\r\n    if (this.control) {\r\n      this.control.setValidators(\r\n        this.control.validator\r\n          ? [this.control.validator, this.validate]\r\n          : [this.validate]\r\n      );\r\n\r\n      this.control.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.removeInputMaskPlugin();\r\n    this.mutationObserver?.disconnect();\r\n  }\r\n\r\n  writeValue(value: string): void {\r\n    const formatter = this.inputMaskOptions?.formatter;\r\n    if (this.nativeInputElement) {\r\n      this.renderer.setProperty(\r\n        this.nativeInputElement,\r\n        'value',\r\n        formatter && value ? formatter(value) : value ?? ''\r\n      );\r\n    }\r\n  }\r\n\r\n  registerOnChange(onChange: (value: T | null) => void): void {\r\n    this.onChange = onChange;\r\n    const parser = this.inputMaskOptions?.parser;\r\n    this.onInput = (value) => {\r\n      this.onChange(parser && value ? parser(value) : value);\r\n    };\r\n  }\r\n\r\n  registerOnTouched(fn: VoidFunction): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  validate = (control: AbstractControl): ValidationErrors | null =>\r\n    !control.value || !this.inputMaskPlugin || this.inputMaskPlugin.isValid()\r\n      ? null\r\n      : { inputMask: true };\r\n\r\n  setDisabledState(disabled: boolean): void {\r\n    if (this.nativeInputElement) {\r\n      this.renderer.setProperty(this.nativeInputElement, 'disabled', disabled);\r\n    }\r\n  }\r\n\r\n  private updateInputMask(): void {\r\n    this.removeInputMaskPlugin();\r\n    this.createInputMaskPlugin();\r\n    // This re-creates the `onInput` function since `inputMaskOptions` might be changed and the `parser`\r\n    // property now differs.\r\n    this.registerOnChange(this.onChange);\r\n  }\r\n\r\n  private createInputMaskPlugin(): void {\r\n    const { nativeInputElement, inputMaskOptions } = this;\r\n\r\n    if (\r\n      isPlatformServer(this.platformId) ||\r\n      !nativeInputElement ||\r\n      inputMaskOptions === null ||\r\n      Object.keys(inputMaskOptions).length === 0\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const { parser, formatter, ...options } = inputMaskOptions;\r\n    this.inputMaskPlugin = this.ngZone.runOutsideAngular(() =>\r\n      new InputmaskConstructor(options).mask(nativeInputElement)\r\n    );\r\n\r\n    if (this.control) {\r\n      setTimeout(() => {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        this.control!.updateValueAndValidity();\r\n      });\r\n    }\r\n  }\r\n\r\n  private get control(): AbstractControl | null | undefined {\r\n    return this.ngControl?.control;\r\n  }\r\n\r\n  private setNativeInputElement(config: InputMaskConfig) {\r\n    if (this.elementRef.nativeElement.tagName === 'INPUT') {\r\n      this.nativeInputElement = this.elementRef.nativeElement;\r\n    } else {\r\n      this.defaultInputMaskConfig = {\r\n        ...this.defaultInputMaskConfig,\r\n        ...config,\r\n      };\r\n      if (this.defaultInputMaskConfig.isAsync) {\r\n        // Create an observer instance linked to the callback function\r\n        this.mutationObserver = new MutationObserver((mutationsList) => {\r\n          for (const mutation of mutationsList) {\r\n            if (mutation.type === 'childList') {\r\n              const nativeInputElement =\r\n                this.elementRef.nativeElement.querySelector(\r\n                  this.defaultInputMaskConfig.inputSelector\r\n                );\r\n              if (nativeInputElement) {\r\n                this.nativeInputElement = nativeInputElement;\r\n                this.mutationObserver?.disconnect();\r\n                this.createInputMaskPlugin();\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        // Start observing the target node for configured mutations\r\n        this.mutationObserver.observe(this.elementRef.nativeElement, {\r\n          childList: true,\r\n          subtree: true,\r\n        });\r\n      } else {\r\n        this.nativeInputElement = this.elementRef.nativeElement.querySelector(\r\n          this.defaultInputMaskConfig.inputSelector\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private removeInputMaskPlugin(): void {\r\n    this.inputMaskPlugin?.remove();\r\n    this.inputMaskPlugin = null;\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { InputMaskConfig, INPUT_MASK_CONFIG } from './config';\r\nimport { InputMaskDirective } from './input-mask.directive';\r\n\r\n@NgModule({\r\n  declarations: [InputMaskDirective],\r\n  exports: [InputMaskDirective],\r\n  providers: [\r\n    {\r\n      provide: INPUT_MASK_CONFIG,\r\n      useClass: InputMaskConfig,\r\n    },\r\n  ],\r\n})\r\nexport class InputMaskModule {\r\n  static forRoot(\r\n    config?: Partial<InputMaskConfig>\r\n  ): ModuleWithProviders<InputMaskModule> {\r\n    return {\r\n      ngModule: InputMaskModule,\r\n      providers: [{ provide: INPUT_MASK_CONFIG, useValue: config }],\r\n    };\r\n  }\r\n}\r\n","import { InputmaskOptions } from './types';\r\n\r\nexport const createMask = <T>(\r\n  options: string | InputmaskOptions<T>\r\n): InputmaskOptions<T> =>\r\n  typeof options === 'string' ? { mask: options } : options;\r\n","/*\r\n * Public API Surface of input-mask\r\n */\r\n\r\nexport * from './lib/input-mask.directive';\r\nexport * from './lib/input-mask.module';\r\nexport * from './lib/constants';\r\nexport * from './lib/types';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}